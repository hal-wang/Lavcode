<UserControl x:Class="Lavcode.View.PasswordList.PasswordList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:hluci="using:Lavcode.Controls.IconControl"
             xmlns:hluvp="using:Lavcode.View.PasswordList"
             xmlns:lvm="using:Lavcode.ViewModel"
             xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
             xmlns:muxc="using:Windows.UI.Xaml.Controls"
             mc:Ignorable="d"
             d:DesignWidth="400">

    <UserControl.Resources>
        <Style x:Key="HeaderToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="{ThemeResource PrimaryAcrylicBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverPanel" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandDirectionStates">
                                    <VisualState x:Name="RightDirection"/>
                                    <VisualState x:Name="DownDirection"/>
                                    <VisualState x:Name="LeftDirection"/>
                                    <VisualState x:Name="UpDirection"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Rectangle x:Name="HoverPanel" Grid.ColumnSpan="2" Fill="Transparent"/>
                            <FontIcon x:Name="Arrow"
                                      FontFamily="Segoe MDL2 Assets"
                                      FontSize="16"
                                      Glyph="&#xE762;"
                                      Margin="12">
                                <FontIcon.RenderTransform>
                                    <RotateTransform CenterX="8"
                                                     CenterY="8"
                                                     Angle="90"/>
                                </FontIcon.RenderTransform>
                            </FontIcon>
                            <ContentPresenter x:Name="ContentPresenter"
                                              AutomationProperties.AccessibilityView="Raw"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              Grid.Column="1"
                                              Foreground="{TemplateBinding Foreground}"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="0,0,12,0"
                                              Padding="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="muxc:Button" BasedOn="{StaticResource TextBlockButtonStyle}"
               x:Key="CmdBtnStyle">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </UserControl.Resources>

    <UserControl.DataContext>
        <hluvp:PasswordListViewModel x:Name="Model"/>
    </UserControl.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Border HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Height="0"
                Width="0"
                Opacity="0"
                Margin="0 30 20 0"
                x:Name="PasswordItemPosition"/>

        <ListView ItemsSource="{x:Bind Model.PasswordItems}"
                  SelectedItem="{x:Bind Model.SelectedPasswordItem,Mode=OneWay}"
                  IsItemClickEnabled="{x:Bind Model.IsMultiSelect,Mode=OneWay,Converter={StaticResource BooleanConverter},ConverterParameter=true}"
                  CanDragItems="True"
                  DragItemsStarting="PasswordListView_DragItemsStarting"
                  Drop="PasswordListView_Drop"
                  AllowDrop="True"
                  DragOver="PasswordListView_DragOver"
                  CanReorderItems="True"
                  SelectionMode="{x:Bind Model.IsMultiSelect,Mode=OneWay,Converter={StaticResource BooleanToValueConverter},ConverterParameter=Multiple:Single}"
                  DragItemsCompleted="ListView_DragItemsCompleted"
                  ItemClick="ListView_ItemClick"
                  SelectionChanged="PasswordListView_SelectionChanged"
                  x:Name="PasswordListView">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="lvm:PasswordItem">
                    <Grid Margin="10 2"
                          Height="60">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <hluci:IconControl Width="46"
                                                Height="46"
                                                Background="{ThemeResource PrimaryAcrylicBrush}"
                                           Icon="{x:Bind Icon,Mode=OneWay}"/>
                        <Grid Grid.Column="1"
                              Margin="14 0 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{x:Bind Title,Mode=OneWay,Converter={StaticResource IsStrEmptyToValueConverter},ConverterParameter=无标题:@Value}"
                                       TextWrapping="NoWrap"
                                       TextTrimming="CharacterEllipsis"
                                       VerticalAlignment="Center"
                                       FontSize="16"
                                       Grid.RowSpan="{x:Bind Remark,Mode=OneWay,Converter={StaticResource IsStrEmptyToValueConverter},ConverterParameter=2:1}"/>
                            <TextBlock Text="{x:Bind Remark,Mode=OneWay}"
                                       FontSize="12.6"
                                       Visibility="{x:Bind Remark,Mode=OneWay,Converter={StaticResource IsStrEmptyConverter},ConverterParameter=true}"
                                       MinHeight="24"
                                       Grid.Row="1"
                                       Opacity="0.6"
                                       VerticalAlignment="Center"
                                       TextWrapping="Wrap"
                                       MaxLines="2"
                                       TextTrimming="CharacterEllipsis"/>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <ListViewItemPresenter x:Name="Root"
                                                       CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                                       ContentMargin="{TemplateBinding Padding}"
                                                       CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                                       ContentTransitions="{TemplateBinding ContentTransitions}"
                                                       CheckMode="{ThemeResource ListViewItemCheckMode}"
                                                       DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                                       DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                                       DragBackground="{ThemeResource ListViewItemDragBackground}"
                                                       DragForeground="{ThemeResource ListViewItemDragForeground}"
                                                       FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                                                       FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                                                       FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                                                       FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                                       FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                                       FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                                                       FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       Control.IsTemplateFocusTarget="True"
                                                       PointerOverBackground="{ThemeResource SystemAccentBrush2}"
                                                       PressedBackground="{ThemeResource SystemAccentBrush3}"
                                                       PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                                       PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                                       RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                                                       ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                       RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                                                       RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                                                       SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                                                       SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                                                       SelectedBackground="{ThemeResource SystemAccentBrush3}"
                                                       SelectedPointerOverBackground="{ThemeResource SystemAccentBrush4}"
                                                       SelectedPressedBackground="{ThemeResource SystemAccentBrush5}"
                                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Selected"/>
                                            <VisualState x:Name="PointerOver">
                                                <VisualState.Setters>
                                                    <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="PointerOverSelected">
                                                <VisualState.Setters>
                                                    <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="PointerOverPressed">
                                                <VisualState.Setters>
                                                    <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <VisualState.Setters>
                                                    <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="PressedSelected">
                                                <VisualState.Setters>
                                                    <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="DisabledStates">
                                            <VisualState x:Name="Enabled"/>
                                            <VisualState x:Name="Disabled">
                                                <VisualState.Setters>
                                                    <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </ListViewItemPresenter>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ContextFlyout>
                <MenuFlyout Opened="MenuFlyout_Opened">
                    <MenuFlyoutItem Text="添加"
                                    Click="{x:Bind Model.HandleAddNew}">
                        <MenuFlyoutItem.Icon>
                            <SymbolIcon Symbol="Add"/>
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem Text="移动"
                                    Click="MoveTo_Click">
                        <MenuFlyoutItem.Icon>
                            <SymbolIcon Symbol="MoveToFolder"/>
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="删除"
                                    Foreground="Red"
                                    Click="Delete_Click">
                        <MenuFlyoutItem.Icon>
                            <SymbolIcon Symbol="Delete"/>
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                </MenuFlyout>
            </ListView.ContextFlyout>
        </ListView>

        <Border HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Grid.Row="1"
                Height="0"
                Width="0"
                Opacity="0"
                Margin="20 0 0 0"
                x:Name="EditBtnPosition"/>

        <controls:Expander HorizontalContentAlignment="Stretch"
                           Grid.Row="1"
                           Height="40"
                           Padding="0"
                           IsExpanded="{x:Bind Model.IsMultiSelect,Mode=TwoWay}"
                           ExpandDirection="Right"
                           HeaderStyle="{StaticResource HeaderToggleButtonStyle}"
                           Background="{ThemeResource PrimaryAcrylicBrush}">
            <controls:Expander.HeaderTemplate>
                <DataTemplate>
                    <Grid Height="0"
                          Width="0"/>
                </DataTemplate>
            </controls:Expander.HeaderTemplate>

            <controls:Expander.Content>
                <Grid Margin="0 -20"
                      Background="{ThemeResource AppBarBackgroundThemeBrush}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <muxc:Button Style="{ThemeResource CmdBtnStyle}"
                                 Click="SelectAll_Click">
                        <StackPanel HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <TextBlock Text="&#xE8B3;"
                               FontSize="18"
                               VerticalAlignment="Center"
                               FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                            <TextBlock Text="{x:Bind Model.IsSelectAll,Mode=OneWay,Converter={StaticResource BooleanToValueConverter},ConverterParameter=取消全选:全选}"
                               VerticalAlignment="Center"
                               Margin="10 0 0 0"/>
                        </StackPanel>
                    </muxc:Button>

                    <muxc:Button Style="{ThemeResource CmdBtnStyle}"
                                 Grid.Column="1"
                                 Click="{x:Bind Model.HandleMoveTo}"
                                 IsEnabled="{x:Bind Model.SelectedItems.Count,Mode=OneWay,Converter={StaticResource NumCompareConverter},ConverterParameter=>0}">
                        <StackPanel HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <TextBlock Text="&#xE8DE;"
                               FontSize="18"
                               VerticalAlignment="Center"
                               FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                            <TextBlock Text="移动"
                               VerticalAlignment="Center"
                               Margin="10 0 0 0"/>
                        </StackPanel>
                    </muxc:Button>

                    <muxc:Button Style="{ThemeResource CmdBtnStyle}"
                                 Grid.Column="2"
                                 Click="{x:Bind Model.HandleDeleteItems}"
                                 IsEnabled="{x:Bind Model.SelectedItems.Count,Mode=OneWay,Converter={StaticResource NumCompareConverter},ConverterParameter=>0}">
                        <StackPanel HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <TextBlock Text="&#xE74D;"
                               FontSize="18"
                               VerticalAlignment="Center"
                               FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                            <TextBlock Text="删除"
                               VerticalAlignment="Center"
                               Margin="10 0 0 0"/>
                        </StackPanel>
                    </muxc:Button>
                </Grid>
            </controls:Expander.Content>

            <controls:Expander.ContentOverlay>
                <Button Style="{ThemeResource CmdBtnStyle}"
                        Click="{x:Bind Model.HandleAddNew}"
                        ToolTipService.ToolTip="添加"
                        x:Name="AddButton">
                    <StackPanel HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                        <TextBlock Text="&#xE710;"
                                   FontSize="18"
                                   VerticalAlignment="Center"
                                   FontFamily="{ThemeResource SymbolThemeFontFamily}"/>
                        <TextBlock Text="添加"
                                   VerticalAlignment="Center"
                                   Margin="10 0 0 0"/>
                    </StackPanel>
                </Button>
            </controls:Expander.ContentOverlay>
        </controls:Expander>
    </Grid>
</UserControl>